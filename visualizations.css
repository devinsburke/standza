#visualization-container {
	width: 100%;
	height: 100%;
}
	#visualization-container > * {
		display: flex;
		flex: 1 1 0;
		user-select: none;
	}

.ban-container {
	height: 16.5%;
}
.graph-container {
	height: 66%;
}
.timeline-container {
	height: 16.5%;
}

viz {
	background: var(--card-background);
	border-radius: 0.8em;
	box-shadow: 0 0 0.1em 0 #0000004d;
	display: flex;
	flex: 1 1 0;
	flex-flow: column;
	margin: 0.3em;
	padding: 0.5em;
}
	viz.ban {
		align-items: center;
		background: var(--background-light);
		flex-flow: row;
	}
		viz.ban::before {
			content: attr(data-value);
			background: rgba(0,0,0,0.3);
			padding: 0 0.5em;
			height: 100%;
			align-items: center;
			display: flex;
			border-radius: 0.3em;
			font-size: 1.5em;
		}
		viz.ban::after {
			content: attr(data-name);
			padding-left: 1em;
		}
	
	viz.donut,
	viz.bar {
		background: var(--primary-dark);
	}
		viz.donut::before,
		viz.bar > span {
			content: attr(data-name);
			display: flex;
			white-space: pre;
			background: rgba(200,200,200,0.1);
			padding: 0.3em;
			border-radius: 0.3em;
			margin-bottom: 0.8em;
		}
		
	viz.donut donut {
		align-items: center;
		position: relative;
		flex: 1 1 0;
	}
		viz.donut donut svg {
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
		}
		viz.donut donut span {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			font-size: 0.75em;
			text-align: center;
		}
			viz.donut donut span::before {
			display: block;
			content: attr(data-current);
				border-bottom: 1px solid;
				padding-bottom: 0.2em;
				margin-bottom: 0.2em;
			}
			viz.donut donut span::after {
				content: attr(data-total) ' ' attr(data-unit);
				display: block;
			}
		
	donut g {
		transform: translate(50%, 50%);
		transform-box: fill-box;
	}
	donut path {
		stroke: #00000087;
		stroke-width: 1px;
		opacity: 0.7;
	}
	bar > svg > g > g > path,
	g > line {
		stroke: white !important;
	}
	g > text {
		fill: white;
	}
	
	viz.state, viz.clock {
		align-items: center;
		flex-flow: row;
	}
	viz.state.mismatch {
		color: yellow;
	}
	viz.state::before {
		content: attr(data-value);
		flex-grow: 1;
		font-size: 2em;
		text-align: center;
	}
	viz.state::after {
		content: attr(data-subtitle);
		flex-grow: 1;
		font-size: 1em;
		text-align: center;
	}
	viz.clock::before {
		content: attr(data-time);
		display: flex;
		flex-grow: 1;
	    font-size: 2em;
		justify-content: space-around;
	}